<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. Sveriges Kommuner och Landsting licenses this file
to you under the Apache License, Version 2.0 (the
        "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
-->
<iso:schema
        xmlns="http://purl.oclc.org/dsdl/schematron"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        queryBinding='xslt2'
        schemaVersion='ISO19757-3'>

    <iso:title>Validation for GetCareServices</iso:title>
    <iso:ns prefix='urn1' uri='urn:riv:clinicalprocess:logistics:logistics:3'/>
    <iso:ns prefix='urn' uri='urn:riv:clinicalprocess:logistics:logistics:GetCareServicesResponder:2'/>

	<iso:pattern abstract="true" id="pattern.CvTypeStrict">		
		<iso:rule context="$path/urn1:code">
			<iso:assert test="count(../urn1:code) = 1">
				In $path code must be given.</iso:assert>
			<iso:assert test="count(../urn1:codeSystem) = 1">
				In $path codeSystem must be given.</iso:assert>
			<iso:assert test="count(../urn1:displayName) = 1">
				In $path displayName must be given.</iso:assert>
			<iso:assert test="count(../urn1:originalText)= 0">
				In $path in originalText must not be given.</iso:assert>
		</iso:rule>
	</iso:pattern>
	
	<iso:pattern abstract="true" id="pattern.IITypeStrict">		
		<iso:rule context="$path/urn1:code">
			<iso:assert test="count(../urn1:extension) = 1">
				In $path extension must be given.</iso:assert>
		</iso:rule>
	</iso:pattern>

	<iso:pattern abstract="true" id="pattern.CvType">
		<iso:rule context="$path">
			<iso:assert test="count(urn1:code) + count(urn1:originalText) = 1">
				In $path, either code or origialText must be given.</iso:assert>
		</iso:rule>

		<iso:rule context="$path/urn1:code">
			<iso:assert test="count(../urn1:codeSystem) + count(../urn1:displayName) = 2">
				In $path if <iso:name/> is given, codeSystem and displayName must be given.</iso:assert>
			<iso:assert test="count(../urn1:originalText)= 0">
				In $path if <iso:name/> is given, originalText must not be given.</iso:assert>
		</iso:rule>
		<iso:rule context="$path/urn1:codeSystem">
			<iso:assert test="count(../urn1:code) + count(../urn1:displayName) = 2">
				In $path if <iso:name/> is given, code and displayName must be given.</iso:assert>
			<iso:assert test="count(../urn1:originalText)= 0">
				In $path if <iso:name/> is given, originalText must not be given.</iso:assert>
		</iso:rule>
		<iso:rule context="$path/urn1:displayName">
			<iso:assert test="count(../urn1:code) + count(../urn1:codeSystem) = 2">
				In $path if <iso:name/> is given, code and codeSystem must be given.</iso:assert>
			<iso:assert test="count(../urn1:originalText)= 0">
				In $path if <iso:name/> is given, originalText must not be given.</iso:assert>
		</iso:rule>
		<iso:rule context="$path/urn1:originalText">
			<iso:assert test="count(../urn1:code) + count(../urn1:codeSystem) + count(../urn1:displayName) = 0">
				In $path if <iso:name/> is given, code, codeSystem and displayName must not be given.</iso:assert>
		</iso:rule>
	</iso:pattern>
	<iso:pattern abstract="true" id="pattern.AccountableHealthcareProfessional">
		<iso:rule context="$path/urn1:healthcareProfessionalCareUnitHSAId">
			<iso:assert test="not(exists(.))"><iso:name/> MUST NOT exist in $path</iso:assert>
		</iso:rule>
		<iso:rule context="$path/urn1:healthcareProfessionalCareGiverHSAId">
			<iso:assert test="not(exists(.))"><iso:name/> MUST NOT exist in $path</iso:assert>
		</iso:rule>
	</iso:pattern>
    <!-- Rules for Request -->


	<!-- Rules for Response, fields that MUST NOT exist in the response -->
	<iso:pattern id="No nullified">
		<iso:rule context="urn1:nullified">
			<iso:assert test="not(exists(.))"><iso:name/> MUST NOT exist in urn1:careServiceHeader</iso:assert>
		</iso:rule>
	</iso:pattern>

	<iso:pattern id="No nullifiedReason">
		<iso:rule context="urn1:nullifiedReason">
			<iso:assert test="not(exists(.))"><iso:name/> MUST NOT exist in urn1:careServiceHeader</iso:assert>
		</iso:rule>
	</iso:pattern>

	<!-- Choice rules for Response, fields that MUST exist given some precondition -->

</iso:schema>
